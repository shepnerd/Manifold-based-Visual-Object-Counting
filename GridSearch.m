
clear all;

dbstop if error;

dataset = 'cell';

kernel_choice = 3;

initGlobalVars;

% regionTypesCandidates = [ 128, 256, 384, 512];
regionTypesCandidates = [128];
regionTypesLength = length(regionTypesCandidates);

% patchSizeCandidates = [4, 5, 6, 7, 8, 9];
% patchStepCandidates = [2, 3, 3, 4, 4, 5];
patchSizeCandidates = [5,6];
patchStepCandidates = [3,6];
patchTypesLength = length(patchSizeCandidates);

% for bee
% sdCandidates = 94 : 1 : 120;
sdCandidates = [1.4 1.6 1.8 1.2 1.0];
sdTypesLength = length(sdCandidates);

lambdaCandidates = 2e-3 : 1e-3 : 3e-3;
% lambdaCandidates = 1e-3;
lambdaLength = length(lambdaCandidates);

for r_grid = 1 : regionTypesLength
    region.types = regionTypesCandidates(r_grid);
    for p_grid = 1 : patchTypesLength
        region.size = patchSizeCandidates(p_grid);
        region.teStep = patchStepCandidates(p_grid);
        region.trStep = patchStepCandidates(p_grid);
        for s_grid = 1 : sdTypesLength
            sd = sdCandidates(s_grid);
            for l_grid = 1 : lambdaLength
                lambda = lambdaCandidates(l_grid);
                
                % saving folder for synthetic images generated by algorithm
                saveName = ['ANR_' dataset '+' datestr(now,'yyyy-mm-dd_HH-MM-SS') ...
                    '_P+' num2str(region.size) '_teS+' num2str(region.teStep) '_trS+' ...
                    num2str(region.trStep) '_train+' num2str(nTrain) '_atoms' ...
                    num2str(region.types) '_cross+' num2str(folders) '_ker+' num2str(kernel_choice) '_sd+' num2str(sd)];
                if strcmp(dataset, 'ucsd')
                    saveName = ['ANR_' dataset '_M+' modeName{dataset_Mode} '+' ...
                        datestr(now,'yyyy-mm-dd_HH-MM-SS') ...
                    '_P+' num2str(region.size) '_teS+' num2str(region.teStep) '_trS+' ...
                    num2str(region.trStep) '_train+' num2str(nTrain) '_atoms' ...
                    num2str(region.types) '_cross+' num2str(folders) '_ker+' num2str(kernel_choice) '_sd+' num2str(sd)];
                end

                KernelANR_Counting;
            end
        end
    end
end

